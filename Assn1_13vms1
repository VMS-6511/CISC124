import java.util.Random;
import java.util.Scanner;
/* LOOK AT THIS ISSUE: HOW TO DISPLAY CUMULATIVE TURN SUM AFTER ROLLING AGAIN WHJILE MAINTAINING ACCURATE GAME SUM*/
public class Assn1_13vms1_Copy {
	
	// This scanner object is used for all of the input in the program
	// Currently thinking of using only System.in for efficiency
	// Declared as an attribute so that the object does not have to be
	// initialized in each method
	final static Scanner keyboard = new Scanner(System.in);
	
	// This random object is used to generate a random object based
	// a seed that uses the millisecond of the current time.
	// It is a class attribute so that the generator can be used 
	// across each of the methods
	final static Random GENERATOR = new Random(System.currentTimeMillis());
	
	//This method creates a random integer from 1 to 6 inclusive that represents the rolling of the dice
	public static int rollDice(){
		 return GENERATOR.nextInt(6)+1;
	}
	
	
	public static int[] printDiceRolls(String currentRoller){
		
		
		int[] diceRolls = new int[2];
		String[] diceRollsWords = new String[2];
		
		// Rolls the dice twice so that the player has two values
		diceRolls[0] = rollDice();
		diceRolls[1] = rollDice();

		System.out.print(currentRoller + " rolled ");
		
		// Determines which numerical words need to be used to describe each of the dice rolls the player and computer
		// received.
		for (int i = 0; i < diceRolls.length;i++){

			switch(diceRolls[i]){
			case 1: diceRollsWords[i] = "one";
					break;
			case 2: diceRollsWords[i] = "two";
					break;
			case 3: diceRollsWords[i] = "three";
					break;
			case 4: diceRollsWords[i] = "four";
					break;
			case 5: diceRollsWords[i] = "five";
					break;
			case 6: diceRollsWords[i] = "six";
					break;
			}
		}

		
		System.out.println(diceRollsWords[0] + " + " + diceRollsWords[1]);
		return diceRolls;

	}
	
	// 
	public static int dicePairEvents(int[] diceRolls, int turnSum, int playerGameSum, String diceEventsPrompt){

		if(diceRolls[0] == 1 && diceRolls[1] == 1){
			System.out.println("Two ones were rolled! " + diceEventsPrompt.toUpperCase() +" TURN IS OVER! Game sum is now zero!");
			return 1;
		}

		else if(diceRolls[0] == 1 || diceRolls[1] == 1){
			System.out.println( "Turn sum is now zero! " + diceEventsPrompt.toUpperCase() +" TURN IS OVER! Game sum is currently: " + playerGameSum);
			return 2;
		}

		else if(diceRolls[0] == diceRolls[1]){
			System.out.println(diceEventsPrompt +" turn sum is: " + turnSum + " and game sum is: " + (playerGameSum + turnSum));
			System.out.println("ROLL AGAIN!");
			return 3;
		}

		else{
			System.out.println(diceEventsPrompt +" turn sum is: " + turnSum + " and game sum is: " + (playerGameSum + turnSum));
			return 4;
		}

	}
	
	public static boolean rollAgain(boolean replay){
		boolean incorrectInput = true;
		do{
			try{
				System.out.println("Would you like to roll again? (y or n)");
				char rollAgain = keyboard.nextLine().charAt(0);

				if (rollAgain == 'y' || rollAgain == 'Y'){
					replay = true;
					incorrectInput = false;
				}
				else if(rollAgain == 'n' || rollAgain == 'N'){
					replay = false;
					incorrectInput = false;
				}
				else{
					System.out.println("Please enter one of the characters specified.");
					incorrectInput = true;
				}
				
			}catch(StringIndexOutOfBoundsException e){
					System.out.println("Please try again using one of the specified characters!");
					incorrectInput = true;
				}
		}while(incorrectInput);
		
		return replay;
		
	}

	public static int playerTurn(int playerGameSum){
		int turnSum = 0;
		boolean replay = true;
		int diceEvent;
		int totalturnSum = 0;
		String currentRoller = "Player";
		String diceEventsPrompt = "Your";
		System.out.println("Player's Turn:\n");

		while(replay){
			int[] diceRolls = printDiceRolls(currentRoller);
			turnSum = diceRolls[0] + diceRolls[1];
			totalturnSum = totalturnSum + turnSum;
			diceEvent = dicePairEvents(diceRolls, totalturnSum, playerGameSum, diceEventsPrompt);
			if(diceEvent == 1){
				playerGameSum = 0;
				totalturnSum = 0;
				replay = false;
			}
			else if (diceEvent == 2){
				totalturnSum = 0;
				replay = false;
			}
			else if (diceEvent == 3)
				replay = true;

			else if (diceEvent == 4)
				replay = rollAgain(replay);
		}
		return (playerGameSum+totalturnSum);
	}

	public static boolean computerStrategy(int turnSum, int computerGameSum, boolean replay){

		//Computer Strategy to be decided

		if (computerGameSum > 80)
			replay = false;

		else if (computerGameSum <= 80)
			replay = true;

		return replay;

	}

	public static int computerTurn(int computerGameSum){
		int turnSum = 0;
		boolean replay = true;
		int diceEvent;
		int totalTurnSum = 0;
		String currentRoller = "Computer";
		String diceEventsPrompt = "Computer's";

		System.out.println("Computer's Turn:");
		
		while(replay){
			
			System.out.print("\n");
			int[] diceRolls = printDiceRolls(currentRoller);
			turnSum =  diceRolls[0] + diceRolls[1];
			totalTurnSum = totalTurnSum + turnSum;
			diceEvent = dicePairEvents(diceRolls, totalTurnSum, computerGameSum, diceEventsPrompt);

			if(diceEvent == 1){
				computerGameSum = 0;
				totalTurnSum = 0;
				replay = false;
			}

			else if (diceEvent == 2){
				totalTurnSum = 0;
				replay = false;
			}
			else if (diceEvent == 3)
				replay = true;
				
			else if (diceEvent == 4)
				replay = computerStrategy(turnSum, computerGameSum, replay);
		}
		return (computerGameSum + totalTurnSum);
	}
	
	public static void winningMessage(int playerGameSum, int computerGameSum){
		
		if (playerGameSum >= 100)
			System.out.println("You won the game with a final score of " + playerGameSum + " ! Congratulations!");
	
		else if (computerGameSum >= 100)
			System.out.println("The computer won the game with a final score of " + computerGameSum + " ! Congratulations!");
		
	}
	
	public static void playGame(){
		boolean playAgain = true;
		
		System.out.println("WELCOME TO THE GAME OF PIG!");
		System.out.println("\nThe player will start the game first! Enjoy!\n");
		System.out.println("---------------------------------------------------\n");
		while(playAgain){
			int playerGameSum = 0;
			int computerGameSum = 0;
		
			while(playerGameSum <100 && computerGameSum <100){
				playerGameSum = playerTurn(playerGameSum);
				System.out.println("\nPlayer's sum is: " + playerGameSum +", Computer's sum is: " + computerGameSum +", Please press <enter> or any key to continue the game.");
				keyboard.nextLine();
				if(playerGameSum<100)
					computerGameSum = computerTurn(computerGameSum);
					System.out.println("\nPlayer's sum is: " + playerGameSum +", Computer's sum is: " + computerGameSum +", Please press <enter> or any key to continue the game.");
					keyboard.nextLine();
			}
			
			winningMessage(playerGameSum, computerGameSum);
			System.out.println("Would you like to play again? (y or n)");
			String Again = keyboard.next();
			if(Again.toLowerCase().equals("y"))
				playAgain = true;
			else if(Again.toLowerCase().equals("n"))
				playAgain = false;
		}
			
	keyboard.close();
		
	}

	public static void main(String[] args) {
		playGame();
		System.exit(0);
		

	}

}

